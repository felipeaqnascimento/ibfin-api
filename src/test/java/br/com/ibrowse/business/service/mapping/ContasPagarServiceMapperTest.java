/*
 * Created on 23 mai 2017 ( Time 18:19:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package br.com.ibrowse.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;

import br.com.ibrowse.bean.ContasPagar;
import br.com.ibrowse.bean.jpa.ContasPagarEntity;
import br.com.ibrowse.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class ContasPagarServiceMapperTest {

	private ContasPagarServiceMapper contasPagarServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		contasPagarServiceMapper = new ContasPagarServiceMapper();
		contasPagarServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'ContasPagarEntity' to 'ContasPagar'
	 * @param contasPagarEntity
	 */
	@Test
	public void testMapContasPagarEntityToContasPagar() {
		// Given
		ContasPagarEntity contasPagarEntity = new ContasPagarEntity();
		contasPagarEntity.setNrDocumentoFiscal(mockValues.nextString(100));
		contasPagarEntity.setOidPessoas(mockValues.nextLong());
		contasPagarEntity.setDtPrevisao(mockValues.nextDate());
		contasPagarEntity.setDtVencimento(mockValues.nextDate());
		contasPagarEntity.setDtPagamento(mockValues.nextDate());
		contasPagarEntity.setVrBruto(mockValues.nextLong());
		contasPagarEntity.setVrJuros(mockValues.nextLong());
		contasPagarEntity.setVrDesconto(mockValues.nextLong());
		contasPagarEntity.setOidTiposTitulos(mockValues.nextLong());
		contasPagarEntity.setOidBancos(mockValues.nextLong());
		contasPagarEntity.setDsFormaPagamento(mockValues.nextString(20));
		contasPagarEntity.setDsObservacao(mockValues.nextString(500));
		contasPagarEntity.setDsUsuAlter(mockValues.nextString(30));
		contasPagarEntity.setDtUltAlter(mockValues.nextDate());
		contasPagarEntity.setVsVersao(mockValues.nextLong());
		
		// When
		ContasPagar contasPagar = contasPagarServiceMapper.mapContasPagarEntityToContasPagar(contasPagarEntity);
		
		// Then
		assertEquals(contasPagarEntity.getNrDocumentoFiscal(), contasPagar.getNrDocumentoFiscal());
		assertEquals(contasPagarEntity.getOidPessoas(), contasPagar.getOidPessoas());
		assertEquals(contasPagarEntity.getDtPrevisao(), contasPagar.getDtPrevisao());
		assertEquals(contasPagarEntity.getDtVencimento(), contasPagar.getDtVencimento());
		assertEquals(contasPagarEntity.getDtPagamento(), contasPagar.getDtPagamento());
		assertEquals(contasPagarEntity.getVrBruto(), contasPagar.getVrBruto());
		assertEquals(contasPagarEntity.getVrJuros(), contasPagar.getVrJuros());
		assertEquals(contasPagarEntity.getVrDesconto(), contasPagar.getVrDesconto());
		assertEquals(contasPagarEntity.getOidTiposTitulos(), contasPagar.getOidTiposTitulos());
		assertEquals(contasPagarEntity.getOidBancos(), contasPagar.getOidBancos());
		assertEquals(contasPagarEntity.getDsFormaPagamento(), contasPagar.getDsFormaPagamento());
		assertEquals(contasPagarEntity.getDsObservacao(), contasPagar.getDsObservacao());
		assertEquals(contasPagarEntity.getDsUsuAlter(), contasPagar.getDsUsuAlter());
		assertEquals(contasPagarEntity.getDtUltAlter(), contasPagar.getDtUltAlter());
		assertEquals(contasPagarEntity.getVsVersao(), contasPagar.getVsVersao());
	}
	
	/**
	 * Test : Mapping from 'ContasPagar' to 'ContasPagarEntity'
	 */
	@Test
	public void testMapContasPagarToContasPagarEntity() {
		// Given
		ContasPagar contasPagar = new ContasPagar();
		contasPagar.setNrDocumentoFiscal(mockValues.nextString(100));
		contasPagar.setOidPessoas(mockValues.nextLong());
		contasPagar.setDtPrevisao(mockValues.nextDate());
		contasPagar.setDtVencimento(mockValues.nextDate());
		contasPagar.setDtPagamento(mockValues.nextDate());
		contasPagar.setVrBruto(mockValues.nextLong());
		contasPagar.setVrJuros(mockValues.nextLong());
		contasPagar.setVrDesconto(mockValues.nextLong());
		contasPagar.setOidTiposTitulos(mockValues.nextLong());
		contasPagar.setOidBancos(mockValues.nextLong());
		contasPagar.setDsFormaPagamento(mockValues.nextString(20));
		contasPagar.setDsObservacao(mockValues.nextString(500));
		contasPagar.setDsUsuAlter(mockValues.nextString(30));
		contasPagar.setDtUltAlter(mockValues.nextDate());
		contasPagar.setVsVersao(mockValues.nextLong());

		ContasPagarEntity contasPagarEntity = new ContasPagarEntity();
		
		// When
		contasPagarServiceMapper.mapContasPagarToContasPagarEntity(contasPagar, contasPagarEntity);
		
		// Then
		assertEquals(contasPagar.getNrDocumentoFiscal(), contasPagarEntity.getNrDocumentoFiscal());
		assertEquals(contasPagar.getOidPessoas(), contasPagarEntity.getOidPessoas());
		assertEquals(contasPagar.getDtPrevisao(), contasPagarEntity.getDtPrevisao());
		assertEquals(contasPagar.getDtVencimento(), contasPagarEntity.getDtVencimento());
		assertEquals(contasPagar.getDtPagamento(), contasPagarEntity.getDtPagamento());
		assertEquals(contasPagar.getVrBruto(), contasPagarEntity.getVrBruto());
		assertEquals(contasPagar.getVrJuros(), contasPagarEntity.getVrJuros());
		assertEquals(contasPagar.getVrDesconto(), contasPagarEntity.getVrDesconto());
		assertEquals(contasPagar.getOidTiposTitulos(), contasPagarEntity.getOidTiposTitulos());
		assertEquals(contasPagar.getOidBancos(), contasPagarEntity.getOidBancos());
		assertEquals(contasPagar.getDsFormaPagamento(), contasPagarEntity.getDsFormaPagamento());
		assertEquals(contasPagar.getDsObservacao(), contasPagarEntity.getDsObservacao());
		assertEquals(contasPagar.getDsUsuAlter(), contasPagarEntity.getDsUsuAlter());
		assertEquals(contasPagar.getDtUltAlter(), contasPagarEntity.getDtUltAlter());
		assertEquals(contasPagar.getVsVersao(), contasPagarEntity.getVsVersao());
	}

}