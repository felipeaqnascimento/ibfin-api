/*
 * Created on 23 mai 2017 ( Time 18:19:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package br.com.ibrowse.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;

import br.com.ibrowse.bean.ContasPagarRateio;
import br.com.ibrowse.bean.jpa.ContasPagarRateioEntity;
import br.com.ibrowse.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class ContasPagarRateioServiceMapperTest {

	private ContasPagarRateioServiceMapper contasPagarRateioServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		contasPagarRateioServiceMapper = new ContasPagarRateioServiceMapper();
		contasPagarRateioServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'ContasPagarRateioEntity' to 'ContasPagarRateio'
	 * @param contasPagarRateioEntity
	 */
	@Test
	public void testMapContasPagarRateioEntityToContasPagarRateio() {
		// Given
		ContasPagarRateioEntity contasPagarRateioEntity = new ContasPagarRateioEntity();
		contasPagarRateioEntity.setOidContasPagar(mockValues.nextString(100));
		contasPagarRateioEntity.setOidCentrosCustos(mockValues.nextLong());
		contasPagarRateioEntity.setVrRateio(mockValues.nextLong());
		contasPagarRateioEntity.setDsUsuAlter(mockValues.nextString(30));
		contasPagarRateioEntity.setDtUltAlter(mockValues.nextDate());
		contasPagarRateioEntity.setVsVersao(mockValues.nextLong());
		
		// When
		ContasPagarRateio contasPagarRateio = contasPagarRateioServiceMapper.mapContasPagarRateioEntityToContasPagarRateio(contasPagarRateioEntity);
		
		// Then
		assertEquals(contasPagarRateioEntity.getOidContasPagar(), contasPagarRateio.getOidContasPagar());
		assertEquals(contasPagarRateioEntity.getOidCentrosCustos(), contasPagarRateio.getOidCentrosCustos());
		assertEquals(contasPagarRateioEntity.getVrRateio(), contasPagarRateio.getVrRateio());
		assertEquals(contasPagarRateioEntity.getDsUsuAlter(), contasPagarRateio.getDsUsuAlter());
		assertEquals(contasPagarRateioEntity.getDtUltAlter(), contasPagarRateio.getDtUltAlter());
		assertEquals(contasPagarRateioEntity.getVsVersao(), contasPagarRateio.getVsVersao());
	}
	
	/**
	 * Test : Mapping from 'ContasPagarRateio' to 'ContasPagarRateioEntity'
	 */
	@Test
	public void testMapContasPagarRateioToContasPagarRateioEntity() {
		// Given
		ContasPagarRateio contasPagarRateio = new ContasPagarRateio();
		contasPagarRateio.setOidContasPagar(mockValues.nextString(100));
		contasPagarRateio.setOidCentrosCustos(mockValues.nextLong());
		contasPagarRateio.setVrRateio(mockValues.nextLong());
		contasPagarRateio.setDsUsuAlter(mockValues.nextString(30));
		contasPagarRateio.setDtUltAlter(mockValues.nextDate());
		contasPagarRateio.setVsVersao(mockValues.nextLong());

		ContasPagarRateioEntity contasPagarRateioEntity = new ContasPagarRateioEntity();
		
		// When
		contasPagarRateioServiceMapper.mapContasPagarRateioToContasPagarRateioEntity(contasPagarRateio, contasPagarRateioEntity);
		
		// Then
		assertEquals(contasPagarRateio.getOidContasPagar(), contasPagarRateioEntity.getOidContasPagar());
		assertEquals(contasPagarRateio.getOidCentrosCustos(), contasPagarRateioEntity.getOidCentrosCustos());
		assertEquals(contasPagarRateio.getVrRateio(), contasPagarRateioEntity.getVrRateio());
		assertEquals(contasPagarRateio.getDsUsuAlter(), contasPagarRateioEntity.getDsUsuAlter());
		assertEquals(contasPagarRateio.getDtUltAlter(), contasPagarRateioEntity.getDtUltAlter());
		assertEquals(contasPagarRateio.getVsVersao(), contasPagarRateioEntity.getVsVersao());
	}

}