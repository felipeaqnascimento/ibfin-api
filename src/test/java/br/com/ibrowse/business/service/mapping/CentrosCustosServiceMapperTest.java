/*
 * Created on 23 mai 2017 ( Time 18:19:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package br.com.ibrowse.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;

import br.com.ibrowse.bean.CentrosCustos;
import br.com.ibrowse.bean.jpa.CentrosCustosEntity;
import br.com.ibrowse.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class CentrosCustosServiceMapperTest {

	private CentrosCustosServiceMapper centrosCustosServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		centrosCustosServiceMapper = new CentrosCustosServiceMapper();
		centrosCustosServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'CentrosCustosEntity' to 'CentrosCustos'
	 * @param centrosCustosEntity
	 */
	@Test
	public void testMapCentrosCustosEntityToCentrosCustos() {
		// Given
		CentrosCustosEntity centrosCustosEntity = new CentrosCustosEntity();
		centrosCustosEntity.setDsCentrosCustos(mockValues.nextString(100));
		centrosCustosEntity.setNmGerente(mockValues.nextString(100));
		centrosCustosEntity.setDsUsuAlter(mockValues.nextString(30));
		centrosCustosEntity.setDtUltAlter(mockValues.nextDate());
		centrosCustosEntity.setVsVersao(mockValues.nextLong());
		
		// When
		CentrosCustos centrosCustos = centrosCustosServiceMapper.mapCentrosCustosEntityToCentrosCustos(centrosCustosEntity);
		
		// Then
		assertEquals(centrosCustosEntity.getDsCentrosCustos(), centrosCustos.getDsCentrosCustos());
		assertEquals(centrosCustosEntity.getNmGerente(), centrosCustos.getNmGerente());
		assertEquals(centrosCustosEntity.getDsUsuAlter(), centrosCustos.getDsUsuAlter());
		assertEquals(centrosCustosEntity.getDtUltAlter(), centrosCustos.getDtUltAlter());
		assertEquals(centrosCustosEntity.getVsVersao(), centrosCustos.getVsVersao());
	}
	
	/**
	 * Test : Mapping from 'CentrosCustos' to 'CentrosCustosEntity'
	 */
	@Test
	public void testMapCentrosCustosToCentrosCustosEntity() {
		// Given
		CentrosCustos centrosCustos = new CentrosCustos();
		centrosCustos.setDsCentrosCustos(mockValues.nextString(100));
		centrosCustos.setNmGerente(mockValues.nextString(100));
		centrosCustos.setDsUsuAlter(mockValues.nextString(30));
		centrosCustos.setDtUltAlter(mockValues.nextDate());
		centrosCustos.setVsVersao(mockValues.nextLong());

		CentrosCustosEntity centrosCustosEntity = new CentrosCustosEntity();
		
		// When
		centrosCustosServiceMapper.mapCentrosCustosToCentrosCustosEntity(centrosCustos, centrosCustosEntity);
		
		// Then
		assertEquals(centrosCustos.getDsCentrosCustos(), centrosCustosEntity.getDsCentrosCustos());
		assertEquals(centrosCustos.getNmGerente(), centrosCustosEntity.getNmGerente());
		assertEquals(centrosCustos.getDsUsuAlter(), centrosCustosEntity.getDsUsuAlter());
		assertEquals(centrosCustos.getDtUltAlter(), centrosCustosEntity.getDtUltAlter());
		assertEquals(centrosCustos.getVsVersao(), centrosCustosEntity.getVsVersao());
	}

}