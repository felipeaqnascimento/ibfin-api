/*
 * Created on 23 mai 2017 ( Time 18:19:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package br.com.ibrowse.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;

import br.com.ibrowse.bean.ContasReceber;
import br.com.ibrowse.bean.jpa.ContasReceberEntity;
import br.com.ibrowse.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class ContasReceberServiceMapperTest {

	private ContasReceberServiceMapper contasReceberServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		contasReceberServiceMapper = new ContasReceberServiceMapper();
		contasReceberServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'ContasReceberEntity' to 'ContasReceber'
	 * @param contasReceberEntity
	 */
	@Test
	public void testMapContasReceberEntityToContasReceber() {
		// Given
		ContasReceberEntity contasReceberEntity = new ContasReceberEntity();
		contasReceberEntity.setNrDocumentoFiscal(mockValues.nextString(100));
		contasReceberEntity.setOidPessoas(mockValues.nextLong());
		contasReceberEntity.setDtPrevisao(mockValues.nextDate());
		contasReceberEntity.setDtVencimento(mockValues.nextDate());
		contasReceberEntity.setDtRecebimento(mockValues.nextDate());
		contasReceberEntity.setVrBruto(mockValues.nextLong());
		contasReceberEntity.setVrJuros(mockValues.nextLong());
		contasReceberEntity.setVrDesconto(mockValues.nextLong());
		contasReceberEntity.setOidCentrosCustos(mockValues.nextLong());
		contasReceberEntity.setOidBancos(mockValues.nextLong());
		contasReceberEntity.setDsFormaRecebimento(mockValues.nextString(20));
		contasReceberEntity.setDsObservacao(mockValues.nextString(500));
		contasReceberEntity.setVrBaseInss(mockValues.nextLong());
		contasReceberEntity.setVrDeducaoInss(mockValues.nextLong());
		contasReceberEntity.setVrBaseIssqn(mockValues.nextLong());
		contasReceberEntity.setVrDeducaoIssqn(mockValues.nextLong());
		contasReceberEntity.setVrBaseCsll(mockValues.nextLong());
		contasReceberEntity.setVrDeducaoCsll(mockValues.nextLong());
		contasReceberEntity.setVrBasePis(mockValues.nextLong());
		contasReceberEntity.setVrDeducaoPis(mockValues.nextLong());
		contasReceberEntity.setVrBaseCofins(mockValues.nextLong());
		contasReceberEntity.setVrDeducaoCofins(mockValues.nextLong());
		contasReceberEntity.setVrBaseIrpj(mockValues.nextLong());
		contasReceberEntity.setVrDeducaoIrpj(mockValues.nextLong());
		contasReceberEntity.setVrOutrasDeducoes(mockValues.nextLong());
		contasReceberEntity.setDsUsuAlter(mockValues.nextString(30));
		contasReceberEntity.setDtUltAlter(mockValues.nextDate());
		contasReceberEntity.setVsVersao(mockValues.nextLong());
		
		// When
		ContasReceber contasReceber = contasReceberServiceMapper.mapContasReceberEntityToContasReceber(contasReceberEntity);
		
		// Then
		assertEquals(contasReceberEntity.getNrDocumentoFiscal(), contasReceber.getNrDocumentoFiscal());
		assertEquals(contasReceberEntity.getOidPessoas(), contasReceber.getOidPessoas());
		assertEquals(contasReceberEntity.getDtPrevisao(), contasReceber.getDtPrevisao());
		assertEquals(contasReceberEntity.getDtVencimento(), contasReceber.getDtVencimento());
		assertEquals(contasReceberEntity.getDtRecebimento(), contasReceber.getDtRecebimento());
		assertEquals(contasReceberEntity.getVrBruto(), contasReceber.getVrBruto());
		assertEquals(contasReceberEntity.getVrJuros(), contasReceber.getVrJuros());
		assertEquals(contasReceberEntity.getVrDesconto(), contasReceber.getVrDesconto());
		assertEquals(contasReceberEntity.getOidCentrosCustos(), contasReceber.getOidCentrosCustos());
		assertEquals(contasReceberEntity.getOidBancos(), contasReceber.getOidBancos());
		assertEquals(contasReceberEntity.getDsFormaRecebimento(), contasReceber.getDsFormaRecebimento());
		assertEquals(contasReceberEntity.getDsObservacao(), contasReceber.getDsObservacao());
		assertEquals(contasReceberEntity.getVrBaseInss(), contasReceber.getVrBaseInss());
		assertEquals(contasReceberEntity.getVrDeducaoInss(), contasReceber.getVrDeducaoInss());
		assertEquals(contasReceberEntity.getVrBaseIssqn(), contasReceber.getVrBaseIssqn());
		assertEquals(contasReceberEntity.getVrDeducaoIssqn(), contasReceber.getVrDeducaoIssqn());
		assertEquals(contasReceberEntity.getVrBaseCsll(), contasReceber.getVrBaseCsll());
		assertEquals(contasReceberEntity.getVrDeducaoCsll(), contasReceber.getVrDeducaoCsll());
		assertEquals(contasReceberEntity.getVrBasePis(), contasReceber.getVrBasePis());
		assertEquals(contasReceberEntity.getVrDeducaoPis(), contasReceber.getVrDeducaoPis());
		assertEquals(contasReceberEntity.getVrBaseCofins(), contasReceber.getVrBaseCofins());
		assertEquals(contasReceberEntity.getVrDeducaoCofins(), contasReceber.getVrDeducaoCofins());
		assertEquals(contasReceberEntity.getVrBaseIrpj(), contasReceber.getVrBaseIrpj());
		assertEquals(contasReceberEntity.getVrDeducaoIrpj(), contasReceber.getVrDeducaoIrpj());
		assertEquals(contasReceberEntity.getVrOutrasDeducoes(), contasReceber.getVrOutrasDeducoes());
		assertEquals(contasReceberEntity.getDsUsuAlter(), contasReceber.getDsUsuAlter());
		assertEquals(contasReceberEntity.getDtUltAlter(), contasReceber.getDtUltAlter());
		assertEquals(contasReceberEntity.getVsVersao(), contasReceber.getVsVersao());
	}
	
	/**
	 * Test : Mapping from 'ContasReceber' to 'ContasReceberEntity'
	 */
	@Test
	public void testMapContasReceberToContasReceberEntity() {
		// Given
		ContasReceber contasReceber = new ContasReceber();
		contasReceber.setNrDocumentoFiscal(mockValues.nextString(100));
		contasReceber.setOidPessoas(mockValues.nextLong());
		contasReceber.setDtPrevisao(mockValues.nextDate());
		contasReceber.setDtVencimento(mockValues.nextDate());
		contasReceber.setDtRecebimento(mockValues.nextDate());
		contasReceber.setVrBruto(mockValues.nextLong());
		contasReceber.setVrJuros(mockValues.nextLong());
		contasReceber.setVrDesconto(mockValues.nextLong());
		contasReceber.setOidCentrosCustos(mockValues.nextLong());
		contasReceber.setOidBancos(mockValues.nextLong());
		contasReceber.setDsFormaRecebimento(mockValues.nextString(20));
		contasReceber.setDsObservacao(mockValues.nextString(500));
		contasReceber.setVrBaseInss(mockValues.nextLong());
		contasReceber.setVrDeducaoInss(mockValues.nextLong());
		contasReceber.setVrBaseIssqn(mockValues.nextLong());
		contasReceber.setVrDeducaoIssqn(mockValues.nextLong());
		contasReceber.setVrBaseCsll(mockValues.nextLong());
		contasReceber.setVrDeducaoCsll(mockValues.nextLong());
		contasReceber.setVrBasePis(mockValues.nextLong());
		contasReceber.setVrDeducaoPis(mockValues.nextLong());
		contasReceber.setVrBaseCofins(mockValues.nextLong());
		contasReceber.setVrDeducaoCofins(mockValues.nextLong());
		contasReceber.setVrBaseIrpj(mockValues.nextLong());
		contasReceber.setVrDeducaoIrpj(mockValues.nextLong());
		contasReceber.setVrOutrasDeducoes(mockValues.nextLong());
		contasReceber.setDsUsuAlter(mockValues.nextString(30));
		contasReceber.setDtUltAlter(mockValues.nextDate());
		contasReceber.setVsVersao(mockValues.nextLong());

		ContasReceberEntity contasReceberEntity = new ContasReceberEntity();
		
		// When
		contasReceberServiceMapper.mapContasReceberToContasReceberEntity(contasReceber, contasReceberEntity);
		
		// Then
		assertEquals(contasReceber.getNrDocumentoFiscal(), contasReceberEntity.getNrDocumentoFiscal());
		assertEquals(contasReceber.getOidPessoas(), contasReceberEntity.getOidPessoas());
		assertEquals(contasReceber.getDtPrevisao(), contasReceberEntity.getDtPrevisao());
		assertEquals(contasReceber.getDtVencimento(), contasReceberEntity.getDtVencimento());
		assertEquals(contasReceber.getDtRecebimento(), contasReceberEntity.getDtRecebimento());
		assertEquals(contasReceber.getVrBruto(), contasReceberEntity.getVrBruto());
		assertEquals(contasReceber.getVrJuros(), contasReceberEntity.getVrJuros());
		assertEquals(contasReceber.getVrDesconto(), contasReceberEntity.getVrDesconto());
		assertEquals(contasReceber.getOidCentrosCustos(), contasReceberEntity.getOidCentrosCustos());
		assertEquals(contasReceber.getOidBancos(), contasReceberEntity.getOidBancos());
		assertEquals(contasReceber.getDsFormaRecebimento(), contasReceberEntity.getDsFormaRecebimento());
		assertEquals(contasReceber.getDsObservacao(), contasReceberEntity.getDsObservacao());
		assertEquals(contasReceber.getVrBaseInss(), contasReceberEntity.getVrBaseInss());
		assertEquals(contasReceber.getVrDeducaoInss(), contasReceberEntity.getVrDeducaoInss());
		assertEquals(contasReceber.getVrBaseIssqn(), contasReceberEntity.getVrBaseIssqn());
		assertEquals(contasReceber.getVrDeducaoIssqn(), contasReceberEntity.getVrDeducaoIssqn());
		assertEquals(contasReceber.getVrBaseCsll(), contasReceberEntity.getVrBaseCsll());
		assertEquals(contasReceber.getVrDeducaoCsll(), contasReceberEntity.getVrDeducaoCsll());
		assertEquals(contasReceber.getVrBasePis(), contasReceberEntity.getVrBasePis());
		assertEquals(contasReceber.getVrDeducaoPis(), contasReceberEntity.getVrDeducaoPis());
		assertEquals(contasReceber.getVrBaseCofins(), contasReceberEntity.getVrBaseCofins());
		assertEquals(contasReceber.getVrDeducaoCofins(), contasReceberEntity.getVrDeducaoCofins());
		assertEquals(contasReceber.getVrBaseIrpj(), contasReceberEntity.getVrBaseIrpj());
		assertEquals(contasReceber.getVrDeducaoIrpj(), contasReceberEntity.getVrDeducaoIrpj());
		assertEquals(contasReceber.getVrOutrasDeducoes(), contasReceberEntity.getVrOutrasDeducoes());
		assertEquals(contasReceber.getDsUsuAlter(), contasReceberEntity.getDsUsuAlter());
		assertEquals(contasReceber.getDtUltAlter(), contasReceberEntity.getDtUltAlter());
		assertEquals(contasReceber.getVsVersao(), contasReceberEntity.getVsVersao());
	}

}