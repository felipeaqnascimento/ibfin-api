/*
 * Created on 23 mai 2017 ( Time 18:19:53 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package br.com.ibrowse.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import br.com.ibrowse.bean.TiposTitulos;
import br.com.ibrowse.business.service.TiposTitulosService;
import br.com.ibrowse.web.listitem.TiposTitulosListItem;

/**
 * Spring MVC controller for 'TiposTitulos' management.
 */
@Controller
public class TiposTitulosRestController {

	@Resource
	private TiposTitulosService tiposTitulosService;
	
	@RequestMapping( value="/items/tiposTitulos",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TiposTitulosListItem> findAllAsListItems() {
		List<TiposTitulos> list = tiposTitulosService.findAll();
		List<TiposTitulosListItem> items = new LinkedList<TiposTitulosListItem>();
		for ( TiposTitulos tiposTitulos : list ) {
			items.add(new TiposTitulosListItem( tiposTitulos ) );
		}
		return items;
	}
	
	@RequestMapping( value="/tiposTitulos",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TiposTitulos> findAll() {
		return tiposTitulosService.findAll();
	}

	@RequestMapping( value="/tiposTitulos/{oidTiposTitulos}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TiposTitulos findOne(@PathVariable("oidTiposTitulos") Long oidTiposTitulos) {
		return tiposTitulosService.findById(oidTiposTitulos);
	}
	
	@RequestMapping( value="/tiposTitulos",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TiposTitulos create(@RequestBody TiposTitulos tiposTitulos) {
		return tiposTitulosService.create(tiposTitulos);
	}

	@RequestMapping( value="/tiposTitulos/{oidTiposTitulos}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TiposTitulos update(@PathVariable("oidTiposTitulos") Long oidTiposTitulos, @RequestBody TiposTitulos tiposTitulos) {
		return tiposTitulosService.update(tiposTitulos);
	}

	@RequestMapping( value="/tiposTitulos/{oidTiposTitulos}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("oidTiposTitulos") Long oidTiposTitulos) {
		tiposTitulosService.delete(oidTiposTitulos);
	}
	
}
