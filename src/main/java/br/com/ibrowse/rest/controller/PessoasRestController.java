/*
 * Created on 23 mai 2017 ( Time 18:19:53 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package br.com.ibrowse.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import br.com.ibrowse.bean.Pessoas;
import br.com.ibrowse.business.service.PessoasService;
import br.com.ibrowse.web.listitem.PessoasListItem;

/**
 * Spring MVC controller for 'Pessoas' management.
 */
@Controller
public class PessoasRestController {

	@Resource
	private PessoasService pessoasService;
	
	@RequestMapping( value="/items/pessoas",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PessoasListItem> findAllAsListItems() {
		List<Pessoas> list = pessoasService.findAll();
		List<PessoasListItem> items = new LinkedList<PessoasListItem>();
		for ( Pessoas pessoas : list ) {
			items.add(new PessoasListItem( pessoas ) );
		}
		return items;
	}
	
	@RequestMapping( value="/pessoas",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Pessoas> findAll() {
		return pessoasService.findAll();
	}

	@RequestMapping( value="/pessoas/{oidPessoas}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Pessoas findOne(@PathVariable("oidPessoas") Long oidPessoas) {
		return pessoasService.findById(oidPessoas);
	}
	
	@RequestMapping( value="/pessoas",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Pessoas create(@RequestBody Pessoas pessoas) {
		return pessoasService.create(pessoas);
	}

	@RequestMapping( value="/pessoas/{oidPessoas}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Pessoas update(@PathVariable("oidPessoas") Long oidPessoas, @RequestBody Pessoas pessoas) {
		return pessoasService.update(pessoas);
	}

	@RequestMapping( value="/pessoas/{oidPessoas}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("oidPessoas") Long oidPessoas) {
		pessoasService.delete(oidPessoas);
	}
	
}
