/*
 * Created on 23 mai 2017 ( Time 18:19:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package br.com.ibrowse.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import br.com.ibrowse.bean.CentrosCustos;
import br.com.ibrowse.bean.jpa.CentrosCustosEntity;
import br.com.ibrowse.business.service.CentrosCustosService;
import br.com.ibrowse.business.service.mapping.CentrosCustosServiceMapper;
import br.com.ibrowse.data.repository.jpa.CentrosCustosJpaRepository;

/**
 * Implementation of CentrosCustosService
 */
@Component
@Transactional
public class CentrosCustosServiceImpl implements CentrosCustosService {

	@Resource
	private CentrosCustosJpaRepository centrosCustosJpaRepository;

	@Resource
	private CentrosCustosServiceMapper centrosCustosServiceMapper;
	
	@Override
	public CentrosCustos findById(Long oidCentrosCustos) {
		CentrosCustosEntity centrosCustosEntity = centrosCustosJpaRepository.findOne(oidCentrosCustos);
		return centrosCustosServiceMapper.mapCentrosCustosEntityToCentrosCustos(centrosCustosEntity);
	}

	@Override
	public List<CentrosCustos> findAll() {
		Iterable<CentrosCustosEntity> entities = centrosCustosJpaRepository.findAll();
		List<CentrosCustos> beans = new ArrayList<CentrosCustos>();
		for(CentrosCustosEntity centrosCustosEntity : entities) {
			beans.add(centrosCustosServiceMapper.mapCentrosCustosEntityToCentrosCustos(centrosCustosEntity));
		}
		return beans;
	}

	@Override
	public CentrosCustos save(CentrosCustos centrosCustos) {
		return update(centrosCustos) ;
	}

	@Override
	public CentrosCustos create(CentrosCustos centrosCustos) {
		CentrosCustosEntity centrosCustosEntity = centrosCustosJpaRepository.findByDsCentrosCustos(centrosCustos.getDsCentrosCustos());
		if( centrosCustosEntity != null ) {
			throw new IllegalStateException("Registro j√° existente!");
		}
		centrosCustosEntity = new CentrosCustosEntity();
		centrosCustosServiceMapper.mapCentrosCustosToCentrosCustosEntity(centrosCustos, centrosCustosEntity);
		CentrosCustosEntity centrosCustosEntitySaved = centrosCustosJpaRepository.save(centrosCustosEntity);
		return centrosCustosServiceMapper.mapCentrosCustosEntityToCentrosCustos(centrosCustosEntitySaved);
	}

	@Override
	public CentrosCustos update(CentrosCustos centrosCustos) {
		CentrosCustosEntity centrosCustosEntity = centrosCustosJpaRepository.findOne(centrosCustos.getOidCentrosCustos());
		centrosCustosServiceMapper.mapCentrosCustosToCentrosCustosEntity(centrosCustos, centrosCustosEntity);
		CentrosCustosEntity centrosCustosEntitySaved = centrosCustosJpaRepository.save(centrosCustosEntity);
		return centrosCustosServiceMapper.mapCentrosCustosEntityToCentrosCustos(centrosCustosEntitySaved);
	}

	@Override
	public void delete(Long oidCentrosCustos) {
		centrosCustosJpaRepository.delete(oidCentrosCustos);
	}

	public CentrosCustosJpaRepository getCentrosCustosJpaRepository() {
		return centrosCustosJpaRepository;
	}

	public void setCentrosCustosJpaRepository(CentrosCustosJpaRepository centrosCustosJpaRepository) {
		this.centrosCustosJpaRepository = centrosCustosJpaRepository;
	}

	public CentrosCustosServiceMapper getCentrosCustosServiceMapper() {
		return centrosCustosServiceMapper;
	}

	public void setCentrosCustosServiceMapper(CentrosCustosServiceMapper centrosCustosServiceMapper) {
		this.centrosCustosServiceMapper = centrosCustosServiceMapper;
	}

}
