/*
 * Created on 23 mai 2017 ( Time 18:19:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package br.com.ibrowse.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import br.com.ibrowse.bean.TiposTitulos;
import br.com.ibrowse.bean.jpa.TiposTitulosEntity;
import br.com.ibrowse.business.service.TiposTitulosService;
import br.com.ibrowse.business.service.mapping.TiposTitulosServiceMapper;
import br.com.ibrowse.data.repository.jpa.TiposTitulosJpaRepository;

/**
 * Implementation of TiposTitulosService
 */
@Component
@Transactional
public class TiposTitulosServiceImpl implements TiposTitulosService {

	@Resource
	private TiposTitulosJpaRepository tiposTitulosJpaRepository;

	@Resource
	private TiposTitulosServiceMapper tiposTitulosServiceMapper;
	
	@Override
	public TiposTitulos findById(Long oidTiposTitulos) {
		TiposTitulosEntity tiposTitulosEntity = tiposTitulosJpaRepository.findOne(oidTiposTitulos);
		return tiposTitulosServiceMapper.mapTiposTitulosEntityToTiposTitulos(tiposTitulosEntity);
	}

	@Override
	public List<TiposTitulos> findAll() {
		Iterable<TiposTitulosEntity> entities = tiposTitulosJpaRepository.findAll();
		List<TiposTitulos> beans = new ArrayList<TiposTitulos>();
		for(TiposTitulosEntity tiposTitulosEntity : entities) {
			beans.add(tiposTitulosServiceMapper.mapTiposTitulosEntityToTiposTitulos(tiposTitulosEntity));
		}
		return beans;
	}

	@Override
	public TiposTitulos save(TiposTitulos tiposTitulos) {
		return update(tiposTitulos) ;
	}

	@Override
	public TiposTitulos create(TiposTitulos tiposTitulos) {
		TiposTitulosEntity tiposTitulosEntity = tiposTitulosJpaRepository.findByDsTiposTitulos(tiposTitulos.getDsTiposTitulos());
		if( tiposTitulosEntity != null ) {
			throw new IllegalStateException("Registro j√° existente!");
		}
		tiposTitulosEntity = new TiposTitulosEntity();
		tiposTitulosServiceMapper.mapTiposTitulosToTiposTitulosEntity(tiposTitulos, tiposTitulosEntity);
		TiposTitulosEntity tiposTitulosEntitySaved = tiposTitulosJpaRepository.save(tiposTitulosEntity);
		return tiposTitulosServiceMapper.mapTiposTitulosEntityToTiposTitulos(tiposTitulosEntitySaved);
	}

	@Override
	public TiposTitulos update(TiposTitulos tiposTitulos) {
		TiposTitulosEntity tiposTitulosEntity = tiposTitulosJpaRepository.findOne(tiposTitulos.getOidTiposTitulos());
		tiposTitulosServiceMapper.mapTiposTitulosToTiposTitulosEntity(tiposTitulos, tiposTitulosEntity);
		TiposTitulosEntity tiposTitulosEntitySaved = tiposTitulosJpaRepository.save(tiposTitulosEntity);
		return tiposTitulosServiceMapper.mapTiposTitulosEntityToTiposTitulos(tiposTitulosEntitySaved);
	}

	@Override
	public void delete(Long oidTiposTitulos) {
		tiposTitulosJpaRepository.delete(oidTiposTitulos);
	}

	public TiposTitulosJpaRepository getTiposTitulosJpaRepository() {
		return tiposTitulosJpaRepository;
	}

	public void setTiposTitulosJpaRepository(TiposTitulosJpaRepository tiposTitulosJpaRepository) {
		this.tiposTitulosJpaRepository = tiposTitulosJpaRepository;
	}

	public TiposTitulosServiceMapper getTiposTitulosServiceMapper() {
		return tiposTitulosServiceMapper;
	}

	public void setTiposTitulosServiceMapper(TiposTitulosServiceMapper tiposTitulosServiceMapper) {
		this.tiposTitulosServiceMapper = tiposTitulosServiceMapper;
	}

}
