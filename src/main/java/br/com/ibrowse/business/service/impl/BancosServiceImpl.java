/*
 * Created on 23 mai 2017 ( Time 18:19:40 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package br.com.ibrowse.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import br.com.ibrowse.bean.Bancos;
import br.com.ibrowse.bean.jpa.BancosEntity;
import br.com.ibrowse.business.service.BancosService;
import br.com.ibrowse.business.service.mapping.BancosServiceMapper;
import br.com.ibrowse.data.repository.jpa.BancosJpaRepository;

/**
 * Implementation of BancosService
 */
@Component
@Transactional
public class BancosServiceImpl implements BancosService {

	@Resource
	private BancosJpaRepository bancosJpaRepository;

	@Resource
	private BancosServiceMapper bancosServiceMapper;
	
	@Override
	public Bancos findById(Long oidBancos) {
		BancosEntity bancosEntity = bancosJpaRepository.findOne(oidBancos);
		return bancosServiceMapper.mapBancosEntityToBancos(bancosEntity);
	}

	@Override
	public List<Bancos> findAll() {
		Iterable<BancosEntity> entities = bancosJpaRepository.findAll();
		List<Bancos> beans = new ArrayList<Bancos>();
		for(BancosEntity bancosEntity : entities) {
			beans.add(bancosServiceMapper.mapBancosEntityToBancos(bancosEntity));
		}
		return beans;
	}

	@Override
	public Bancos save(Bancos bancos) {
		return update(bancos) ;
	}

	@Override
	public Bancos create(Bancos bancos) {
		BancosEntity bancosEntity = bancosJpaRepository.findByCdBanco(bancos.getCdBanco());
		if( bancosEntity != null ) {
			throw new IllegalStateException("Registro j√° existente!");
		}
		bancosEntity = new BancosEntity();
		bancosServiceMapper.mapBancosToBancosEntity(bancos, bancosEntity);
		BancosEntity bancosEntitySaved = bancosJpaRepository.save(bancosEntity);
		return bancosServiceMapper.mapBancosEntityToBancos(bancosEntitySaved);
	}

	@Override
	public Bancos update(Bancos bancos) {
		BancosEntity bancosEntity = bancosJpaRepository.findOne(bancos.getOidBancos());
		bancosServiceMapper.mapBancosToBancosEntity(bancos, bancosEntity);
		BancosEntity bancosEntitySaved = bancosJpaRepository.save(bancosEntity);
		return bancosServiceMapper.mapBancosEntityToBancos(bancosEntitySaved);
	}

	@Override
	public void delete(Long oidBancos) {
		bancosJpaRepository.delete(oidBancos);
	}

	public BancosJpaRepository getBancosJpaRepository() {
		return bancosJpaRepository;
	}

	public void setBancosJpaRepository(BancosJpaRepository bancosJpaRepository) {
		this.bancosJpaRepository = bancosJpaRepository;
	}

	public BancosServiceMapper getBancosServiceMapper() {
		return bancosServiceMapper;
	}

	public void setBancosServiceMapper(BancosServiceMapper bancosServiceMapper) {
		this.bancosServiceMapper = bancosServiceMapper;
	}

}
